<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope,spUtil,$window,$http) {
	/* widget controller */
	var c = this;

	c.readOnlyForm = false;
	
	c.currentUser = c.data.currentUser;
	
	c.popup2 = {
		opened: false
	};

	c.open2 = function() {
		c.popup2.opened = true;
	};

	c.popup3 = {
		opened: false
	};

	c.open3 = function() {
		c.popup3.opened = true;
	};

	$scope.SRequester = {
		displayValue:'',
		value: '',
		location: '',
		email : '',
		title :'',
		employee_id :'',
		department : '',
		name: 'SRequester'
	}


	$scope.SApprover = {
		displayValue:'',
		value: '',
		location: '',
		email : '',
		title :'',
		employee_id :'',
		department : '',
		name: 'SApprover'
	}
			
	$scope.SRequester.value = c.currentUser.id;
	$scope.SRequester.displayValue = c.currentUser.name;
	$scope.SRequester.location=c.currentUser.location;
	$scope.SRequester.email=c.currentUser.email;
	$scope.SRequester.title=c.currentUser.title;
	$scope.SRequester.employee_id=c.currentUser.employeeID;
	$scope.SRequester.department=c.currentUser.dept_name;

	$scope.$on("field.change", function(evt, parms){
		if(parms.field.name == 'SRequester'){

			$scope.SDepartment.value = '';
			$scope.SDepartment.displayValue = '';

			if(parms.newValue != ''){
				c.server.get({								
					action: 'GetRequesterInfo',
					sys_id: parms.newValue
				}).then(function(r){

					//$scope.SRequester.value = r.data.requesterID;
					//$scope.SRequester.displayValue = r.data.requesterName;
					$scope.SRequester.email = r.data.requesterEmail;
					$scope.SRequester.title = r.data.requesterTitle;
					$scope.SRequester.location = r.data.requesterLocationName;
					$scope.SRequester.employee_id = r.data.requesterEmployeeID;

					$scope.SDepartment.value = r.data.requesterDeptID;
					$scope.SDepartment.displayValue = r.data.requesterDeptName;

					//console.log('$scope.SRequester : ' + JSON.stringify($scope.SRequester));

				});
			}
		}
		else if(parms.field.name == 'SApprover'){
			if(parms.newValue != ''){
				c.server.get({								
					action: 'GetRequesterInfo',
					sys_id: parms.newValue
				}).then(function(r){

					//$scope.SRequester.value = r.data.requesterID;
					//$scope.SRequester.displayValue = r.data.requesterName;

					$scope.SApprover.email = r.data.requesterEmail;
					$scope.SApprover.title = r.data.requesterTitle;
					$scope.SApprover.location = r.data.requesterLocationName;
					$scope.SApprover.employee_id = r.data.requesterEmployeeID;

					//console.log('$scope.SRequester.email : ' + $scope.SRequester.email);

					$scope.SApprover.location = r.data.requesterLocationName;

				});
			}
		}
	});
	
	
	c.submit = function(){
		c.readOnlyForm = true;

		c.server.get({
			formData :{
				// Requestsor Info
				requestor : $scope.SRequester.value,
				delegate : $scope.SApprover.value,

				// Request Detail
				approvals  : c.approvals,
				assignments  : c.assignments,
				invitations  : c.invitations,
				notifications  : c.notifications,

				// Date
				starts : moment(c.start_date).format('YYYY-MM-DD'),
				ends : moment(c.end_date).format('YYYY-MM-DD')
			},
			action	: 'add'
		}).then(function(r){

			c.readOnlyForm = false;
			//$window.location.href='';


		});	
		
	}
}]]></client_script>
        <controller_as>c</controller_as>
        <css>
.icon-success {
    color: #5CB85C;
}

.nmr-mandatory{
  color: red;
}

table {
    border-collapse: collapse;
}

td {
    position: relative;
    padding: 5px 10px;
}
.graph-layout{
	height:auto;
  width:auto;
  border-radius:10px;
  //border:2px solid gray;
  box-shadow:0 0 5px gray;
  //overflow-x:scroll;
  padding:10px;
  margin:auto;
  margin-bottom:20px;

  background-color:white;
}

.active-layout{
  padding:10px;
  //padding-top:10px;
  //padding-bottom:10px;
  display:flex;
  //border:2px solid gray;
  border-radius:5px;
  width:240px;
  background-color:white;
  box-shadow:0 0 5px #154d8d;
  margin-top: 10px;
  margin-bottom: 20px;
  margin-left:20px;
}


.left-side,.right-side{
  //flex: 50%;
  padding: 0px 5px;
  font-size:16px;
}
.left-side &gt; b{
	font-size:40px;
  color:#154d8d;
}
.right-side{
  font-size:40px;
  margin:auto;
  text-align:center;
  color:#154d8d;
  //color:#eae3f0;
}
.vcenter {
    display: inline-block;
    vertical-align: middle;
    float: none;
}


hr.style-one {
    border: 0;
    height: 1px;
  	//border-color:#e52a2a,
    background: #333;
    background-image: linear-gradient(to right, #ccc, #333, #ccc);
}


/* Gradient transparent - color - transparent */

hr.style-two {
  border: 0;
  //border-color: #428bca;
  height: 1px;

  //background-image: linear-gradient(to right, rgba(0, 0, 0, 0), rgba(66, 139, 202, 0.55), rgba(0, 0, 0, 0));
  background-image: linear-gradient(to right, #fbdfdf, #e52a2a, #fbdfdf);
}

/* Double-color dashed line */

hr.style-three {
    border: 0;
    border-bottom: 1px dashed #ccc;
    background: #999;
}

/* Flaired edges */

hr.style-seven {
    overflow: visible; /* For IE */
    height: 30px;
    border-style: solid;
    border-color: black;
    border-width: 1px 0 0 0;
    border-radius: 20px;
}
hr.style-seven:before { /* Not really supposed to work, but does */
    display: block;
    content: "";
    height: 30px;
    margin-top: -31px;
    border-style: solid;
    border-color: black;
    border-width: 0 0 1px 0;
    border-radius: 20px;
}



/* Glyph, by Harry Roberts */

hr.style-eight {
    overflow: visible; /* For IE */
    padding: 0;
    border: none;
    border-top: medium double #333;
    color: #333;
    text-align: center;
}
hr.style-eight:after {
    content: "§";
    display: inline-block;
    position: relative;
    top: -0.7em;
    font-size: 1.5em;
    padding: 0 0.25em;
    background: white;
}

.project-list {
    background-color: transparent;
    margin-bottom: 29px;
}

.project-list-title {
    font-size: 1.38462rem;
    margin-bottom: 28px;
}
.project-item-header {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  //background-color: #f2f4f9;
  //padding: 5px;
  margin-bottom: .923077rem;
  border-radius: .35rem;
  border: 1px solid transparent;
}
.project-item {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  //background-color: #f2f4f9;
  padding: 23px;
  margin-bottom: .923077rem;
  border-radius: .35rem;
  border: 1px solid transparent;
}


.project-item-title {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-flex: 0;
    -ms-flex: 0 1 20%;
    flex: 0 1 20%;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    padding-right: 5px;
}

.project-item-user {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-flex: 0;
    -ms-flex: 0 1 25%;
    flex: 0 1 25%;
  -webkit-box-orient: vertical;
   -webkit-box-direction: normal;
    padding-right: 5px;
}

.project-item-user .user-info {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
}

.project-item-state {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-flex: 0;
    -ms-flex: 0 1 20%;
    flex: 0 1 20%;
    padding-right: 5px;
}

.description {
    font-size: 1rem;
    color: #999;
}

.project-item-date {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-flex: 0;
    -ms-flex: 0 1 15%;
    flex: 0 1 15%;
    padding-right: 5px;
}

.project-item-progress {
    -webkit-box-flex: 0;
    -ms-flex: 0 1 15%;
    flex: 0 1 15%;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
}

.project-item-actions {
    -webkit-box-flex: 0;
    -ms-flex: 0 1 5%;
    flex: 0 1 5%;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: end;
    -ms-flex-pack: end;
    justify-content: flex-end;
  	padding-left: 20px;
}

/* ---------------------------------------------------

Project : CSS Checkbox Switch
Author : Partha Kar (https://www.facebook.com/partha.creativemind)
Version : 1.0
Release Dtae : 15 November, 2017

---------------------------------------------------- */


.checkbox.checbox-switch {
    padding-left: 0;
}

.checkbox.checbox-switch label,
.checkbox-inline.checbox-switch {
    display: inline-block;
    position: relative;
    padding-left: 0;
}
.checkbox.checbox-switch label input,
.checkbox-inline.checbox-switch input {
    display: none;
}
.checkbox.checbox-switch label span,
.checkbox-inline.checbox-switch span {
    width: 35px;
    border-radius: 20px;
    height: 18px;
    border: 1px solid #dbdbdb;
    background-color: rgb(255, 255, 255);
    border-color: rgb(223, 223, 223);
    box-shadow: rgb(223, 223, 223) 0px 0px 0px 0px inset;
    transition: border 0.4s ease 0s, box-shadow 0.4s ease 0s;
    display: inline-block;
    vertical-align: middle;
    margin-right: 5px;
}
.checkbox.checbox-switch label span:before,
.checkbox-inline.checbox-switch span:before {
    display: inline-block;
    width: 16px;
    height: 16px;
    border-radius: 50%;
    background: rgb(255,255,255);
    content: " ";
    top: 0;
    position: relative;
    left: 0;
    transition: all 0.3s ease;
    box-shadow: 0 1px 4px rgba(0,0,0,0.4);
}
.checkbox.checbox-switch label &gt; input:checked + span:before,
.checkbox-inline.checbox-switch &gt; input:checked + span:before {
    left: 17px;
}


/* Switch Default */
.checkbox.checbox-switch label &gt; input:checked + span,
.checkbox-inline.checbox-switch &gt; input:checked + span {
    background-color: rgb(180, 182, 183);
    border-color: rgb(180, 182, 183);
    box-shadow: rgb(180, 182, 183) 0px 0px 0px 8px inset;
    transition: border 0.4s ease 0s, box-shadow 0.4s ease 0s, background-color 1.2s ease 0s;
}
.checkbox.checbox-switch label &gt; input:checked:disabled + span,
.checkbox-inline.checbox-switch &gt; input:checked:disabled + span {
    background-color: rgb(220, 220, 220);
    border-color: rgb(220, 220, 220);
    box-shadow: rgb(220, 220, 220) 0px 0px 0px 8px inset;
    transition: border 0.4s ease 0s, box-shadow 0.4s ease 0s, background-color 1.2s ease 0s;
}
.checkbox.checbox-switch label &gt; input:disabled + span,
.checkbox-inline.checbox-switch &gt; input:disabled + span {
    background-color: rgb(232,235,238);
    border-color: rgb(255,255,255);
}
.checkbox.checbox-switch label &gt; input:disabled + span:before,
.checkbox-inline.checbox-switch &gt; input:disabled + span:before {
    background-color: rgb(248,249,250);
    border-color: rgb(243, 243, 243);
    box-shadow: 0 1px 4px rgba(0,0,0,0.1);
}

/* Switch Light */
.checkbox.checbox-switch.switch-light label &gt; input:checked + span,
.checkbox-inline.checbox-switch.switch-light &gt; input:checked + span {
    background-color: rgb(248,249,250);
    border-color: rgb(248,249,250);
    box-shadow: rgb(248,249,250) 0px 0px 0px 8px inset;
    transition: border 0.4s ease 0s, box-shadow 0.4s ease 0s, background-color 1.2s ease 0s;
}

/* Switch Dark */
.checkbox.checbox-switch.switch-dark label &gt; input:checked + span,
.checkbox-inline.checbox-switch.switch-dark &gt; input:checked + span {
    background-color: rgb(52,58,64);
    border-color: rgb(52,58,64);
    box-shadow: rgb(52,58,64) 0px 0px 0px 8px inset;
    transition: border 0.4s ease 0s, box-shadow 0.4s ease 0s, background-color 1.2s ease 0s;
}
.checkbox.checbox-switch.switch-dark label &gt; input:checked:disabled + span,
.checkbox-inline.checbox-switch.switch-dark &gt; input:checked:disabled + span {
    background-color: rgb(100, 102, 104);
    border-color: rgb(100, 102, 104);
    box-shadow: rgb(100, 102, 104) 0px 0px 0px 8px inset;
    transition: border 0.4s ease 0s, box-shadow 0.4s ease 0s, background-color 1.2s ease 0s;
}

/* Switch Success */
.checkbox.checbox-switch.switch-success label &gt; input:checked + span,
.checkbox-inline.checbox-switch.switch-success &gt; input:checked + span {
    background-color: rgb(40, 167, 69);
    border-color: rgb(40, 167, 69);
    box-shadow: rgb(40, 167, 69) 0px 0px 0px 8px inset;
    transition: border 0.4s ease 0s, box-shadow 0.4s ease 0s, background-color 1.2s ease 0s;
}
.checkbox.checbox-switch.switch-success label &gt; input:checked:disabled + span,
.checkbox-inline.checbox-switch.switch-success &gt; input:checked:disabled + span {
    background-color: rgb(153, 217, 168);
    border-color: rgb(153, 217, 168);
    box-shadow: rgb(153, 217, 168) 0px 0px 0px 8px inset;
}

/* Switch Danger */
.checkbox.checbox-switch.switch-danger label &gt; input:checked + span,
.checkbox-inline.checbox-switch.switch-danger &gt; input:checked + span {
    background-color: rgb(200, 35, 51);
    border-color: rgb(200, 35, 51);
    box-shadow: rgb(200, 35, 51) 0px 0px 0px 8px inset;
    transition: border 0.4s ease 0s, box-shadow 0.4s ease 0s, background-color 1.2s ease 0s;
}
.checkbox.checbox-switch.switch-danger label &gt; input:checked:disabled + span,
.checkbox-inline.checbox-switch.switch-danger &gt; input:checked:disabled + span {
    background-color: rgb(216, 119, 129);
    border-color: rgb(216, 119, 129);
    box-shadow: rgb(216, 119, 129) 0px 0px 0px 8px inset;
    transition: border 0.4s ease 0s, box-shadow 0.4s ease 0s, background-color 1.2s ease 0s;
}

/* Switch Primary */
.checkbox.checbox-switch.switch-primary label &gt; input:checked + span,
.checkbox-inline.checbox-switch.switch-primary &gt; input:checked + span {
    background-color: rgb(0, 105, 217);
    border-color: rgb(0, 105, 217);
    box-shadow: rgb(0, 105, 217) 0px 0px 0px 8px inset;
    transition: border 0.4s ease 0s, box-shadow 0.4s ease 0s, background-color 1.2s ease 0s;
}
.checkbox.checbox-switch.switch-primary label &gt; input:checked:disabled + span,
.checkbox-inline.checbox-switch.switch-primary &gt; input:checked:disabled + span {
    background-color: rgb(109, 163, 221);
    border-color: rgb(109, 163, 221);
    box-shadow: rgb(109, 163, 221) 0px 0px 0px 8px inset;
    transition: border 0.4s ease 0s, box-shadow 0.4s ease 0s, background-color 1.2s ease 0s;
}

/* Switch Info */
.checkbox.checbox-switch.switch-info label &gt; input:checked + span,
.checkbox-inline.checbox-switch.switch-info &gt; input:checked + span {
    background-color: rgb(23, 162, 184);
    border-color: rgb(23, 162, 184);
    box-shadow: rgb(23, 162, 184) 0px 0px 0px 8px inset;
    transition: border 0.4s ease 0s, box-shadow 0.4s ease 0s, background-color 1.2s ease 0s;
}
.checkbox.checbox-switch.switch-info label &gt; input:checked:disabled + span,
.checkbox-inline.checbox-switch.switch-info &gt; input:checked:disabled + span {
    background-color: rgb(102, 192, 206);
    border-color: rgb(102, 192, 206);
    box-shadow: rgb(102, 192, 206) 0px 0px 0px 8px inset;
    transition: border 0.4s ease 0s, box-shadow 0.4s ease 0s, background-color 1.2s ease 0s;
}

/* Switch Warning */
.checkbox.checbox-switch.switch-warning label &gt; input:checked + span,
.checkbox-inline.checbox-switch.switch-warning &gt; input:checked + span {
    background-color: rgb(255, 193, 7);
    border-color: rgb(255, 193, 7);
    box-shadow: rgb(255, 193, 7) 0px 0px 0px 8px inset;
    transition: border 0.4s ease 0s, box-shadow 0.4s ease 0s, background-color 1.2s ease 0s;
}
.checkbox.checbox-switch.switch-warning label &gt; input:checked:disabled + span,
.checkbox-inline.checbox-switch.switch-warning &gt; input:checked:disabled + span {
    background-color: rgb(226, 195, 102);
    border-color: rgb(226, 195, 102);
    box-shadow: rgb(226, 195, 102) 0px 0px 0px 8px inset;
    transition: border 0.4s ease 0s, box-shadow 0.4s ease 0s, background-color 1.2s ease 0s;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>delegate</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Delegate</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {

	data.user_dv = gs.getUser().getDisplayName();
	data.uservalue = gs.getUserID();
	data.dateformat = '';
	
	data.currentUser = {};
	data.currentUser.id = gs.getUserID();
	data.currentUser.name = gs.getUserDisplayName();
	

	if (!input){
		//--->>>--->>>--->>>--->>>--->>>--->>>--->>>--->>>--->>>--->>>
		// Find current user in sys_user table
		//--->>>--->>>--->>>--->>>--->>>--->>>--->>>--->>>--->>>--->>>
		var u = new GlideRecord("sys_user");
		if (u.get(data.currentUser.id)){
			data.currentUser.location = u.getDisplayValue("location");
			data.currentUser.phone = u.getDisplayValue("phone");
			data.currentUser.title = u.getDisplayValue("title");
			data.currentUser.email = u.getDisplayValue("email");
			data.currentUser.dept_name = u.getDisplayValue("department");
			data.currentUser.dept_id = u.getValue("department");
			data.currentUser.employeeID = u.getDisplayValue("correlation_id");
		}
	
		// Get current delegates
		data.current_delegates = [];
		var current_dr = new GlideRecord('sys_user_delegate');
		current_dr.addQuery('user',data.uservalue);
		current_dr.addQuery('delegate','!=',data.uservalue);
		current_dr.orderByDesc('ends');
		current_dr.query();

		while(current_dr.next()){
			var obj = {};
			obj.delegate_sysid = current_dr.delegate.toString();
			obj.delegate = current_dr.delegate.getDisplayValue();
			obj.delegateTitle = current_dr.delegate.title.getDisplayValue();
			//obj.delegate_img = current_dr.delegate.photo.getDisplayValue();

			obj.sys_id = current_dr.sys_id.toString();
			obj.starts = current_dr.starts.toString();
			obj.ends = current_dr.ends.toString();

			obj.approvals = current_dr.approvals;
			obj.assignments = current_dr.assignments;
			obj.invitations = current_dr.invitations;
			obj.notifications = current_dr.notifications;

			data.current_delegates.push(obj);
		}
		// Get current delegates to me

		data.current_delegates_tome = [];
		var current_dr_tm = new GlideRecord('sys_user_delegate');
		current_dr_tm.addQuery('delegate',data.uservalue);
		current_dr_tm.addQuery('user','!=',data.uservalue);
		current_dr_tm.orderByDesc('ends');
		current_dr_tm.query();

		while(current_dr_tm.next()){
			var obj_tm = {};
			obj_tm.delegate_sysid = current_dr_tm.user.toString();
			obj_tm.delegate = current_dr_tm.user.getDisplayValue();
			//obj_tm.delegate_img = current_dr_tm.user.photo.getDisplayValue();
			obj_tm.sys_id = current_dr_tm.sys_id.toString();
			obj_tm.starts = current_dr_tm.starts.toString();
			obj_tm.ends = current_dr_tm.ends.toString();

			//obj_tm.approvals = current_dr_tm.getValue('approvals')==1?true:false;
			obj_tm.approvals = current_dr_tm.approvals;
			obj_tm.assignments = current_dr_tm.assignments;
			obj_tm.invitations = current_dr_tm.invitations;
			obj_tm.notifications = current_dr_tm.notifications;

			data.current_delegates_tome.push(obj_tm);
		}
	}
	else{
		if(input.action == 'add'){
			var newDelegateGR = new GlideRecord('sys_user_delegate');
			newDelegateGR.initialize(); 
			newDelegateGR.user = input.formData.requestor; 
			newDelegateGR.delegate = input.formData.delegate; 
			newDelegateGR.starts = input.formData.starts;
			newDelegateGR.ends = input.formData.ends;
			
			newDelegateGR.approvals = input.formData.approvals;
			newDelegateGR.assignments = input.formData.assignments;
			newDelegateGR.invitations = input.formData.invitations;
			newDelegateGR.notifications = input.formData.notifications;
			newDelegateGR.insert();
			
			gs.addInfoMessage('Delegation created')
			
		}
		else if(input.action == 'remove'){
			
		}
		else if(input.action=="GetRequesterInfo"){
			var grRequester = new GlideRecord("sys_user");
			if (grRequester.get(input.sys_id)){

				data.requesterID = gs.getUserID();
				data.requesterName = gs.getUserDisplayName();

				data.requesterTitle = grRequester.getDisplayValue("title");
				data.requesterEmail = grRequester.getDisplayValue("email");

				data.requesterLocationID = grRequester.getValue("location");
				data.requesterLocationName = grRequester.getDisplayValue("location");

				data.requesterDeptID = grRequester.getValue("department");
				data.requesterDeptName = grRequester.getDisplayValue("department");

				data.requesterPhone = grRequester.getDisplayValue("phone");
				data.requesterMobilePhone= grRequester.getDisplayValue("mobile_phone");

				data.requesterEmployeeID = grRequester.getDisplayValue("employee_number");

			}
		}
		
	}
	
	
	
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>Sansiro.Ma</sys_created_by>
        <sys_created_on>2020-12-17 06:24:47</sys_created_on>
        <sys_id>8bef9ccb1b85681059943265cc4bcb84</sys_id>
        <sys_mod_count>164</sys_mod_count>
        <sys_name>Delegate</sys_name>
        <sys_package display_value="Coupa Requisition" source="x_nriws_coupa_req">0d3e1ae31b48201059943265cc4bcb59</sys_package>
        <sys_policy/>
        <sys_scope display_value="Coupa Requisition">0d3e1ae31b48201059943265cc4bcb59</sys_scope>
        <sys_update_name>sp_widget_8bef9ccb1b85681059943265cc4bcb84</sys_update_name>
        <sys_updated_by>NRIWPS_mizoshiri</sys_updated_by>
        <sys_updated_on>2021-06-24 07:24:50</sys_updated_on>
        <template><![CDATA[<h2>
  Delegations
  <p class="pull-right">
    <button class="btn btn-danger" ng-click="c.goHome()">
      ${ホームページへ戻る}
    </button>
  </p>
</h2>

<hr class = "style-two">

<div class="graph-layout">
  <div>
    <form name="requestOverViewForm" class="form-horizontal">
      <fieldset ng-disabled="c.readOnlyForm">
        <div class="overview"> 
          <div class="container-fluid"> 
            <h4>
              <i ng-if="requestOverViewForm.$invalid == false && SRequester.value&&SApprover.value" class="fa fa-check-circle" style="color:#21b384"></i>
              <i ng-if="requestOverViewForm.$invalid || !(SRequester.value&&SApprover.value) ||(!c.approvals&&!c.assignments&&!c.invitations&&!c.notifications)" class="fa fa-exclamation-triangle" style="color:#cc2114"></i>
              ${代理依頼}
            </h4>
            <hr>
            <div class="row">
              <div class="col-xs-12 col-sm-12" >

                <div class="form-group">
                  <div class="col-xs-12 ">
                    <i class="fa fa-check-circle" style="color:#21b384" ng-if="SRequester.value"></i>
                    <i ng-if="!SRequester.value" class="fa fa-exclamation-triangle" style="color:#cc2114"></i>
                    <b>依頼者</b>
                    <a data-toggle="tooltip" data-placement="top" title="本代理の依頼者"><i class="fa fa-info-circle" style="color:#17a2b8"></i></a>
                    <span ng-class="{'nmr-mandatory' : !SRequester.value, 'nmr-mandatory-filled': SRequester.value}">*</span>
                  </div>
                  <div class="col-xs-12">
                    <sn-record-picker sn-disabled=true field="SRequester" table="'sys_user'" default-query = "'active=true'" display-field="'name'" display-fields="'name,email'" value-field="'sys_id'" search-fields="'name,email'" page-size="10"  placeholder="本代理の依頼者" ></sn-record-picker>
                  </div>
                </div>             
                <div class="panel panel-default" ng-if='SRequester.value'>   
                  <div class="panel-body">
                    <div class="row">
                      <div class="col-xs-12 col-sm-4 text-center">
                        <div class="row">
                          <div class="avatar-extra-large avatar-container" style="cursor:default;">
                            <div >
                              <sn-avatar class="avatar-extra-large" primary="SRequester.value" show-presence="false" />
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="col-xs-12 col-sm-8">
                        <h2><strong>{{SRequester.displayValue}}</strong></h2>

                        <!-- <p ><i class="fa fa-building" aria-hidden="true"></i><strong class="pad-right">{{SRequesterDept.displayValue}}</strong><sp-editable-field editable-by-user="data.isLoggedInUsersProfile" table="sys_user" table-id="data.sysUserID" field-model="data.sysUserModel.department"></sp-editable-field></p> -->
                        <p ><i class="fa fa-map-marker" aria-hidden="true"></i><strong class="pad-right"> &nbsp;  {{SRequester.location}}</strong></p>
                        <p ><i class="fa fa-envelope" aria-hidden="true"></i><strong class="pad-right"> &nbsp; {{SRequester.email}}</strong></p>
                        <p ><i class="fa fa-graduation-cap" aria-hidden="true"></i><strong class="pad-right"> &nbsp; {{SRequester.title}}</strong></p>
                        <p ><i class="fa fa-id-card-o" aria-hidden="true"></i><strong class="pad-right"> &nbsp; {{SRequester.employee_id}}</strong></p>

                      </div>
                    </div>
                  </div>
                </div>

              </div>
            </div>
            <div class="row">
              <div class="col-xs-12 col-sm-12" >
                <div class="form-group">
                  <div class="col-xs-12 ">
                    <i class="fa fa-check-circle" style="color:#21b384" ng-if="SApprover.value"></i>
                    <i ng-if="!SApprover.value" class="fa fa-exclamation-triangle" style="color:#cc2114"></i>

                    <b>代理者</b>
                    <a data-toggle="tooltip" data-placement="top" title="代理者"><i class="fa fa-info-circle" style="color:#17a2b8"></i></a>
                    <span ng-class="{'nmr-mandatory' : !SApprover.value, 'nmr-mandatory-filled': SApprover.value}">*</span>
                  </div>
                  <div class="col-xs-12">
                    <sn-record-picker sn-disabled="c.readOnlyForm" field="SApprover" table="'sys_user'" default-query = "" display-field="'name'" display-fields="'title,email'" value-field="'sys_id'" search-fields="'name,email'" page-size="10"  placeholder="代理者" ></sn-record-picker>
                  </div>
                </div> 
                <div class="panel panel-default" ng-if='SApprover.value'>
                  <div class="panel-body">
                    <div class="row">
                      <div class="col-xs-12 col-sm-4 text-center">
                        <div class="row">
                          <div class="avatar-extra-large avatar-container" style="cursor:default;">
                            <div >
                              <!-- <div class="sub-avatar mia" ng-style="avatarPicture"><i class="fa fa-user"></i></div>-->
                              <sn-avatar class="avatar-extra-large" primary="SApprover.value" show-presence="false" />
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="col-xs-12 col-sm-8">
                        <h2><strong>{{SApprover.displayValue}}</strong></h2>
                        <p><i class="fa fa-map-marker" aria-hidden="true"></i><strong class="pad-right"> &nbsp;  {{SApprover.location}}</strong></p>
                        <p><i class="fa fa-envelope" aria-hidden="true"></i><strong class="pad-right"> &nbsp; {{SApprover.email}}</strong></p>
                        <p><i class="fa fa-graduation-cap" aria-hidden="true"></i><strong class="pad-right"> &nbsp; {{SApprover.title}}</strong></p>
                        <p><i class="fa fa-id-card-o" aria-hidden="true"></i><strong class="pad-right"> &nbsp; {{SApprover.employee_id}}</strong></p>

                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            
            <div class="form-group">
               <div class="col-xs-12">
                 <i class="fa fa-check-circle" style="color:#21b384" ng-if="c.start_date"></i>
                 <i ng-if="!c.start_date" class="fa fa-exclamation-triangle" style="color:#cc2114"></i>
                 <b>開始日</b>
                 <span ng-class="{'nmr-mandatory' : !c.start_date, 'nmr-mandatory-filled': c.start_date}">*</span>
               </div>
               <div class="col-xs-12">
                 <p class="input-group">
                   <input type="text" class="form-control" uib-datepicker-popup="yyyy-MMM-dd" ng-model="c.start_date" is-open="c.popup2.opened"  ng-required="true" close-text="Close" alt-input-formats="altInputFormats"/>
                   <span class="input-group-btn">
                     <button type="button" class="btn btn-default" ng-click="c.open2()"><i class="glyphicon glyphicon-calendar"></i></button>
                   </span>
                 </p>
               </div>
            </div>
            <div class="form-group">
              <div class="col-xs-12">
                <i class="fa fa-check-circle" style="color:#21b384" ng-if="c.end_date"></i>
                <i ng-if="!c.end_date" class="fa fa-exclamation-triangle" style="color:#cc2114"></i>
                <b>終了日</b>
                <span ng-class="{'nmr-mandatory' : !c.end_date, 'nmr-mandatory-filled': c.end_date}">*</span>
              </div>
              <div class="col-xs-12">
                <p class="input-group">
                  <input type="text" class="form-control" uib-datepicker-popup="yyyy-MMM-dd" ng-model="c.end_date" is-open="c.popup3.opened"  ng-required="true" close-text="Close" alt-input-formats="altInputFormats"/>
                  <span class="input-group-btn">
                    <button type="button" class="btn btn-default" ng-click="c.open3()"><i class="glyphicon glyphicon-calendar"></i></button>
                  </span>
                </p>
              </div>
            </div>
            

            <small class="text-uppercase text-muted">
               <i class="fa fa-check-circle" style="color:#21b384" ng-if="c.approvals||c.assignments||c.invitations||c.notifications"></i>
              <i ng-if="!c.approvals&&!c.assignments&&!c.invitations&&!c.notifications" class="fa fa-exclamation-triangle" style="color:#cc2114"></i>
              <b>代理依頼内容</b>
              <span ng-class="{'nmr-mandatory' : !c.approvals&&!c.assignments&&!c.invitations&&!c.notifications, 'nmr-mandatory-filled': c.approvals||c.assignments||c.invitations||c.notifications}">*</span>
            </small>
            <div>
              <div class="checkbox checbox-switch switch-success">
                <label>
                  <input type="checkbox" name="" ng-model="c.approvals"/>
                  <span></span>
                  承認
                </label>
              </div>
            </div>
            <div>
              <div class="checkbox checbox-switch switch-success">
                <label>
                  <input type="checkbox" name="" ng-model="c.assignments"/>
                  <span></span>
                  アサイメント
                </label>
              </div>
            </div>
            <div>
              <div class="checkbox checbox-switch switch-success">
                <label>
                  <input type="checkbox" name="" ng-model="c.invitations"/>
                  <span></span>
                  インビテーション
                </label>
              </div>
            </div>
            <div>
              <div class="checkbox checbox-switch switch-success">
                <label>
                  <input type="checkbox" name="" ng-model="c.notifications"/>
                  <span></span>
                  通知
                </label>
              </div>
            </div>
            
          </div>
        </div>
      </fieldset>
    </form>
  </div>
  <hr>
  <div  class="row">
    <div class="col-xs-12">
      <p class="pull-right">
        <button  class="btn btn-success" 
                ng-click="c.submit()" 
                ng-disabled="requestOverViewForm.$invalid || c.readOnlyForm || !SRequester.value||!SApprover.value||(!c.approvals&&!c.assignments&&!c.invitations&&!c.notifications)">
          ${Submit}
        </button>
      </p>
    </div>
  </div>

</div>

<div class="graph-layout"  ng-if="c.data.current_delegates.length > 0">
  <div class="row">
    <div class="col-sm-3">
      <div class="active-layout" >
        <div class="left-side">
          <b>{{c.data.current_delegates.length}}</b>
          <p><span> ${My delegates}</span></p>
        </div>
        <div class="right-side">
          <i class="fa fa-list" aria-hidden="true"></i>
        </div>
      </div>
    </div>      
  </div>
  <div class="container cus-container" >     
    <div  class="row">
      <table   class="table table-hover ">
        <th ng-click="c.sortClick('number')">Delegate</th> 
        <th ng-click="c.sortClick('approval_state_value')">Approvals</th> 
        <th ng-click="c.sortClick('rpa_request_type')">Assignments</th>
        <th ng-click="c.sortClick('opened_at')">CC notifications</th>
        <th ng-click="c.sortClick('opened_by_sysid')">Meeting invitations</th>

        <th></th>
        <tbody>
          <tr ng-repeat="req in c.data.current_delegates">
            <td> 
              <div class="project-item-user">
                <div class="user-avatar"><sn-avatar class="avatar-small-medium" primary="req.delegate_sysid" /></div>
                <div class="user-info"><span class="name">{{req.delegate}}</span><span class="position description">{{req.delegateTitle}}</span></div>
              </div>
            </td>
            <td>
              <div ng-if ='req.approvals' class = "icon-success"></div>
            </td>

            <td>
              <div ng-if ='req.assignments' class = "icon-success"></div>
            </td>

            <td>
              <div ng-if ='req.invitations' class = "icon-success"></div>
            </td>
            <td>
              <div ng-if ='req.notifications' class = "icon-success"></div>
            </td>
            <td >               
              <button  class="btn btn-primary" ng-click="c.checkDetails(req)">
                Delete
              </button> 

            </td>
          </tr>
        </tbody>
      </table> 
      
    </div>
  </div>
  
</div>

<div class="graph-layout"  ng-if="c.data.current_delegates_tome.length > 0">
  <div class="row">
    <div class="col-sm-3">
      <div class="active-layout" >
        <div class="left-side">
          <b>{{c.data.current_delegates_tome.length}}</b>
          <p> ${Delegates to Me}</p>
        </div>
        <div class="right-side">
          <i class="fa fa-list" aria-hidden="true"></i>
        </div>
      </div>
    </div>      
  </div>
  
</div>
]]></template>
    </sp_widget>
</record_update>
