<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function test($scope, $window) {
  /* widget controller */
  var c = this;

  c.current_page = c.data.page;
  c.search = "";
  c.invoiceStatus = c.data.invoiceStatus;
	c.itemsPerPageOptions = [10,20,30,40,50,100];
	c.itemsPerPage = c.itemsPerPageOptions[4];
  
  c.itemsPerPageHandler = function() {
    c.data.action="item_per_page";
    c.data.itemsPerPage=c.itemsPerPage;
    c.server.update();
  }
  
  c.goToPage = function(page) {
    if (page == c.data.page) 
      return;
    c.data.page = page;
    c.data.action = 'go_to_page';
    c.server.update();
  }

  c.nextPage = function() {
    if (c.data.page == c.data.totalPage)
      return;
    c.data.action = 'next_page';
    c.current_page++;
    c.data.page = c.current_page;
   
    c.server.update();
  }

  c.prevPage = function() {
    if (c.data.page == 1)
      return;
    c.data.action = 'prev_page';
    c.current_page--;
    c.data.page = c.current_page;
   
    c.server.update();
  }

  c.sort = function(orderBy) {
    c.data.action = 'sort';
    c.data.orderBy = orderBy;
    c.data.sort == 'ASC' ? c.data.sort = 'DESC' : c.data.sort = 'ASC';
    c.server.update();
  }

  c.goHome = function(){
		$window.location.href="?id=" + c.data.home_page_id;
	}

  c.statusSelected = function() {
    c.data.statusSelected = c.invoiceStatus;
    c.server.update();
  }

  c.searchRecord = function () {
    c.data.search = c.search;
    c.server.update();
  }

  c.redirect = function(query) {
    $window.location.href = '?id=coupa_invoice_approval_list&status=' + query;
  }

  jQuery('table.table-hover th').click(function(e){
    jQuery('table.table-hover th').removeClass('active');
    jQuery(this).addClass('active');
  })
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.break-line {
  border: 0;
  height: 1px;
  background-image: linear-gradient(to right, #fbdfdf, #e52a2a, #fbdfdf);
}


.approval-list-layout{
	height:auto;
  width:auto;
  border-radius:10px;
  box-shadow:0 0 5px #154d8d;
  padding:10px;
  margin:auto;
  margin-bottom:30px;
  background-color:white;

}
hr.style-two {
  border: 0;
  height: 1px;
  background-image: linear-gradient(to right, #fbdfdf, #e52a2a, #fbdfdf);
}


.space{
  height:50px;
}

.right {
  align: right;
}

.vcenter {
    display: inline-block;
    vertical-align: middle;
    float: none;
}

.li-class{
  display:inline-block;
  margin-right:20px;
  list-style-type:none;
}
.layout{
  padding:0 5px;
  display:flex;
  //border:2px solid black;
  border-radius:5px;
  width:180px;
  background-color:white;
  box-shadow:0 0 10px gray;
}

.active-layout{
  padding-top:10px;
  padding-bottom:10px;
  display:flex;
  //border:2px solid gray;
  border-radius:5px;
  width:180px;
  background-color:white;
  box-shadow:0 0 10px #428bca;
  //margin-top: -28px;
  //margin-bottom: -28px;
  //margin-left:-25px;
}

.left-side,.right-side{
  //flex: 50%;
  padding: 0px 5px;
  font-size:16px;
}
.left-side &gt; b{
	font-size:40px;
}
.right-side{
  font-size:40px;
  margin:auto;
  text-align:center;
  //color:#eae3f0;
}
.SumCount-layout{
	padding:10px;
  border-radius:10px;
  //border:2px solid gray;
}



//ul li{
//  list-style-type:none;
//  display:inline-block;
//  margin-left:25px;
//}
.butn-layout{
  padding:15px;
  background-color: #f8f7f7;
  text-align:center;
  width:300px;
  border-radius:10px;
  box-shadow:0 0 10px gray;
}
.butn-layout:hover{
  opacity:.6;
}
.butn-icon{
  //height:75px;
  //width:75px;
  font-size:50px;
  margin:auto;
}
.butn-layout h3{
  font-size:20px;
}
.butn-layout p{
  color:gray;
  font-size:16px;
}
.green{
  color:#90ce70;
}
.red{
  color:#dd5d3d;
}
.grey{
  color:#5e9cd4;
}

//table {
//  width: 100%;
//}
//
//table, td {
//  /*border-collapse: collapse;*/
//  /*border: 1px solid #000;*/
//}
//
//thead {
//  display: table; /* to take the same width as tr */
//  width: calc(100% - 17px); /* - 17px because of the scrollbar width */
//}
//
//tbody {
//  display: block; /* to enable vertical scrolling */
//  max-height: 500px; /* e.g. */
//  //overflow-y: scroll; /* keeps the scrollbar even if it doesn't need it; display purpose */
//}

//th, td {
//  width: 10%; /* to enable "word-break: break-all" */
//  padding: 5px;
//  word-break: break-all; /* 4. */
//}
//
//tr {
//  display: table; /* display purpose; th's border */
//  width: 100%;
//  box-sizing: border-box; /* because of the border (Chrome needs this line, but not FF) */
//}
//
//td {
//  text-align: center;
//  border-bottom: none;
//  border-left: none;
//  border-right: none;
//}

//th{
//  text-align: center;
//}

.right{
  text-align: right;
  right-padding: 10px;
  ]

.project-list {
    background-color: transparent;
    margin-bottom: 29px;
}

.project-list-title {
    font-size: 1.38462rem;
    margin-bottom: 28px;
}
.project-item-header {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  //background-color: #f2f4f9;
  //padding: 5px;
  margin-bottom: .923077rem;
  border-radius: .35rem;
  border: 1px solid transparent;
}
.project-item {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  //background-color: #f2f4f9;
  padding: 23px;
  margin-bottom: .923077rem;
  border-radius: .35rem;
  border: 1px solid transparent;
}

.btn-outline-primary {
    color: #06794f;
    border-color: #06794f;
}

.btn-outline-success {
    color: #3ac97c;
    border-color: #3ac97c;
}

.btn-outline-danger {
    color: #d73f30;
    border-color: #d73f30;
}

.project-item-title {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-flex: 0;
    -ms-flex: 0 1 20%;
    flex: 0 1 20%;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    padding-right: 5px;
}

.project-item-user {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-flex: 0;
    -ms-flex: 0 1 25%;
    flex: 0 1 25%;
  -webkit-box-orient: vertical;
   -webkit-box-direction: normal;
    padding-right: 5px;
}

.project-item-user .user-info {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
}

.project-item-state {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-flex: 0;
    -ms-flex: 0 1 20%;
    flex: 0 1 20%;
    padding-right: 5px;
}

.description {
    font-size: 1rem;
    color: black;
}

.project-item-date {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-flex: 0;
    -ms-flex: 0 1 15%;
    flex: 0 1 15%;
    padding-right: 5px;
}

.project-item-progress {
    -webkit-box-flex: 0;
    -ms-flex: 0 1 15%;
    flex: 0 1 15%;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
}

  .project-item-actions {
    -webkit-box-flex: 0;
    -ms-flex: 0 1 5%;
    flex: 0 1 5%;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: end;
    -ms-flex-pack: end;
    justify-content: flex-end;
    padding-left: 20px;
  }
  
  .card {
    box-shadow: 0 0.46875rem 2.1875rem rgba(4, 9, 20, 0.03), 0 0.9375rem 1.40625rem rgba(4, 9, 20, 0.03), 0 0.25rem 0.53125rem rgba(4, 9, 20, 0.05), 0 0.125rem 0.1875rem rgba(4, 9, 20, 0.03);
    border-width: 0;
    transition: all .2s;
    position: relative;
    //display: -ms-flexbox;
    display: flex;
    //-ms-flex-direction: column;
    flex-direction: column;
    min-width: 0;
    word-wrap: break-word;
    background-color: #fff;
    background-clip: border-box;
    border: 1px solid rgba(26, 54, 126, 0.125);
    border-radius: 0.25rem;

  }
  
 
/* ---------------------------------------------------

Project : CSS Checkbox Switch
Author : Partha Kar (https://www.facebook.com/partha.creativemind)
Version : 1.0
Release Dtae : 15 November, 2017

---------------------------------------------------- */


  .checkbox.checbox-switch {
    padding-left: 0;
  }

  .checkbox.checbox-switch label,
  .checkbox-inline.checbox-switch {
    display: inline-block;
    position: relative;
    padding-left: 0;
  }
  .checkbox.checbox-switch label input,
  .checkbox-inline.checbox-switch input {
    display: none;
  }
  .checkbox.checbox-switch label span,
  .checkbox-inline.checbox-switch span {
    width: 35px;
    border-radius: 20px;
    height: 18px;
    border: 1px solid #dbdbdb;
    background-color: rgb(255, 255, 255);
    border-color: rgb(223, 223, 223);
    box-shadow: rgb(223, 223, 223) 0px 0px 0px 0px inset;
    transition: border 0.4s ease 0s, box-shadow 0.4s ease 0s;
    display: inline-block;
    vertical-align: middle;
    margin-right: 5px;
  }
  .checkbox.checbox-switch label span:before,
  .checkbox-inline.checbox-switch span:before {
    display: inline-block;
    width: 16px;
    height: 16px;
    border-radius: 50%;
    background: rgb(255,255,255);
    content: " ";
    top: 0;
    position: relative;
    left: 0;
    transition: all 0.3s ease;
    box-shadow: 0 1px 4px rgba(0,0,0,0.4);
  }
  .checkbox.checbox-switch label &gt; input:checked + span:before,
  .checkbox-inline.checbox-switch &gt; input:checked + span:before {
    left: 17px;
  }


  /* Switch Default */
  .checkbox.checbox-switch label &gt; input:checked + span,
  .checkbox-inline.checbox-switch &gt; input:checked + span {
    background-color: rgb(180, 182, 183);
    border-color: rgb(180, 182, 183);
    box-shadow: rgb(180, 182, 183) 0px 0px 0px 8px inset;
    transition: border 0.4s ease 0s, box-shadow 0.4s ease 0s, background-color 1.2s ease 0s;
  }
  .checkbox.checbox-switch label &gt; input:checked:disabled + span,
  .checkbox-inline.checbox-switch &gt; input:checked:disabled + span {
    background-color: rgb(220, 220, 220);
    border-color: rgb(220, 220, 220);
    box-shadow: rgb(220, 220, 220) 0px 0px 0px 8px inset;
    transition: border 0.4s ease 0s, box-shadow 0.4s ease 0s, background-color 1.2s ease 0s;
  }
  .checkbox.checbox-switch label &gt; input:disabled + span,
  .checkbox-inline.checbox-switch &gt; input:disabled + span {
    background-color: rgb(232,235,238);
    border-color: rgb(255,255,255);
  }
  .checkbox.checbox-switch label &gt; input:disabled + span:before,
  .checkbox-inline.checbox-switch &gt; input:disabled + span:before {
    background-color: rgb(248,249,250);
    border-color: rgb(243, 243, 243);
    box-shadow: 0 1px 4px rgba(0,0,0,0.1);
  }

  /* Switch Light */
  .checkbox.checbox-switch.switch-light label &gt; input:checked + span,
  .checkbox-inline.checbox-switch.switch-light &gt; input:checked + span {
    background-color: rgb(248,249,250);
    border-color: rgb(248,249,250);
    box-shadow: rgb(248,249,250) 0px 0px 0px 8px inset;
    transition: border 0.4s ease 0s, box-shadow 0.4s ease 0s, background-color 1.2s ease 0s;
  }

  /* Switch Dark */
  .checkbox.checbox-switch.switch-dark label &gt; input:checked + span,
  .checkbox-inline.checbox-switch.switch-dark &gt; input:checked + span {
    background-color: rgb(52,58,64);
    border-color: rgb(52,58,64);
    box-shadow: rgb(52,58,64) 0px 0px 0px 8px inset;
    transition: border 0.4s ease 0s, box-shadow 0.4s ease 0s, background-color 1.2s ease 0s;
  }
  .checkbox.checbox-switch.switch-dark label &gt; input:checked:disabled + span,
  .checkbox-inline.checbox-switch.switch-dark &gt; input:checked:disabled + span {
    background-color: rgb(100, 102, 104);
    border-color: rgb(100, 102, 104);
    box-shadow: rgb(100, 102, 104) 0px 0px 0px 8px inset;
    transition: border 0.4s ease 0s, box-shadow 0.4s ease 0s, background-color 1.2s ease 0s;
  }

  /* Switch Success */
  .checkbox.checbox-switch.switch-success label &gt; input:checked + span,
  .checkbox-inline.checbox-switch.switch-success &gt; input:checked + span {
    background-color: rgb(40, 167, 69);
    border-color: rgb(40, 167, 69);
    box-shadow: rgb(40, 167, 69) 0px 0px 0px 8px inset;
    transition: border 0.4s ease 0s, box-shadow 0.4s ease 0s, background-color 1.2s ease 0s;
  }
  .checkbox.checbox-switch.switch-success label &gt; input:checked:disabled + span,
  .checkbox-inline.checbox-switch.switch-success &gt; input:checked:disabled + span {
    background-color: rgb(153, 217, 168);
    border-color: rgb(153, 217, 168);
    box-shadow: rgb(153, 217, 168) 0px 0px 0px 8px inset;
  }

  /* Switch Danger */
  .checkbox.checbox-switch.switch-danger label &gt; input:checked + span,
  .checkbox-inline.checbox-switch.switch-danger &gt; input:checked + span {
    background-color: rgb(200, 35, 51);
    border-color: rgb(200, 35, 51);
    box-shadow: rgb(200, 35, 51) 0px 0px 0px 8px inset;
    transition: border 0.4s ease 0s, box-shadow 0.4s ease 0s, background-color 1.2s ease 0s;
  }
  .checkbox.checbox-switch.switch-danger label &gt; input:checked:disabled + span,
  .checkbox-inline.checbox-switch.switch-danger &gt; input:checked:disabled + span {
    background-color: rgb(216, 119, 129);
    border-color: rgb(216, 119, 129);
    box-shadow: rgb(216, 119, 129) 0px 0px 0px 8px inset;
    transition: border 0.4s ease 0s, box-shadow 0.4s ease 0s, background-color 1.2s ease 0s;
  }

  /* Switch Primary */
  .checkbox.checbox-switch.switch-primary label &gt; input:checked + span,
  .checkbox-inline.checbox-switch.switch-primary &gt; input:checked + span {
    background-color: rgb(0, 105, 217);
    border-color: rgb(0, 105, 217);
    box-shadow: rgb(0, 105, 217) 0px 0px 0px 8px inset;
    transition: border 0.4s ease 0s, box-shadow 0.4s ease 0s, background-color 1.2s ease 0s;
  }
  .checkbox.checbox-switch.switch-primary label &gt; input:checked:disabled + span,
  .checkbox-inline.checbox-switch.switch-primary &gt; input:checked:disabled + span {
    background-color: rgb(109, 163, 221);
    border-color: rgb(109, 163, 221);
    box-shadow: rgb(109, 163, 221) 0px 0px 0px 8px inset;
    transition: border 0.4s ease 0s, box-shadow 0.4s ease 0s, background-color 1.2s ease 0s;
  }

  /* Switch Info */
  .checkbox.checbox-switch.switch-info label &gt; input:checked + span,
  .checkbox-inline.checbox-switch.switch-info &gt; input:checked + span {
    background-color: rgb(23, 162, 184);
    border-color: rgb(23, 162, 184);
    box-shadow: rgb(23, 162, 184) 0px 0px 0px 8px inset;
    transition: border 0.4s ease 0s, box-shadow 0.4s ease 0s, background-color 1.2s ease 0s;
  }
  .checkbox.checbox-switch.switch-info label &gt; input:checked:disabled + span,
  .checkbox-inline.checbox-switch.switch-info &gt; input:checked:disabled + span {
    background-color: rgb(102, 192, 206);
    border-color: rgb(102, 192, 206);
    box-shadow: rgb(102, 192, 206) 0px 0px 0px 8px inset;
    transition: border 0.4s ease 0s, box-shadow 0.4s ease 0s, background-color 1.2s ease 0s;
  }

  /* Switch Warning */
  .checkbox.checbox-switch.switch-warning label &gt; input:checked + span,
  .checkbox-inline.checbox-switch.switch-warning &gt; input:checked + span {
    background-color: rgb(255, 193, 7);
    border-color: rgb(255, 193, 7);
    box-shadow: rgb(255, 193, 7) 0px 0px 0px 8px inset;
    transition: border 0.4s ease 0s, box-shadow 0.4s ease 0s, background-color 1.2s ease 0s;
  }
  .checkbox.checbox-switch.switch-warning label &gt; input:checked:disabled + span,
  .checkbox-inline.checbox-switch.switch-warning &gt; input:checked:disabled + span {
    background-color: rgb(226, 195, 102);
    border-color: rgb(226, 195, 102);
    box-shadow: rgb(226, 195, 102) 0px 0px 0px 8px inset;
    transition: border 0.4s ease 0s, box-shadow 0.4s ease 0s, background-color 1.2s ease 0s;
  }



.coupa-invoice-page {
  height:auto;
  width:auto;
  border-radius:10px;
  box-shadow:0 0 5px #154d8d;
  padding:10px;
  margin:auto;
  margin-bottom:20px;
  background-color:white;

  .nav-pagination{
    display: flex;
    align-items: center;
    .pagination {
      align-items: center;
      flex: 1;
      display: flex;

      /* Chrome, Safari, Edge, Opera */
      input::-webkit-outer-spin-button,
      input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
      }

      /* Firefox */
      input[type=number] {
        -moz-appearance: textfield;
      }
    }
  }

  .primary-color {
    color: #154d8d;
  }

  .admin-list-layout {
    .panel-body {
      .active-layout {
        padding-top: 10px;
        padding-left: 10px;
        padding-bottom: 10px;
        display: flex;
        border-radius: 5px;
        width: 200px;
        background-color: white;
        box-shadow: 0 0 10px #428bca;

        .left-side {
          padding: 0px 5px;
          font-size: 30px;
        }
        .right-side {
          font-size: 40px;
          margin: auto;
          text-align: center;
        }
      }
    }
    
  }

  

  .table-hover{
    td {
      padding: 10px;
      line-height: 1.4;
    }
  }
  
}
 
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id/>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}
]]></link>
        <name>Coupa invoice list</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
  data.home_page_id = 'coupa_invoice_approval_homepage';
  data.page = 1;
  data.limit = 50;
  data.invoices = [];
  data.totalRecord = 0; 
  data.pageItems = [];
  data.totalPage = 0;
  data.sort = 'ASC';
  data.orderBy = 'id';
  data.invoiceStatus = $sp.getParameter('status');
  data.search = "";
  data.userId = gs.getUserID();
  data.contract_number = [];
  data.numberPendingApproval = 0;
  data.numberApproved = 0;
  data.numberRejected = 0;
  gs.addInfoMessage(data.invoiceStatus);
  var AnaplanContractGR = new GlideRecord('x_nriws_coupa_req_anaplan_contract');
  AnaplanContractGR.addQuery('approver', data.userId);
  AnaplanContractGR.query();
  while(AnaplanContractGR.next()) {
     data.contract_number.push(AnaplanContractGR.getValue('representation_contract_number'));
  }
 
  if (input) {
    data.sort = input.sort;
    data.orderBy = input.orderBy;
    data.invoiceStatus = input.statusSelected;
    data.search = input.search;

    if(input.action == 'go_to_page') {
      data.page = input.page;
    }
    else if(input.action == 'next_page') {
      data.page = input.page;
    }
    else if(input.action == 'prev_page') {
      data.page = input.page;
    }
    else if(input.action == 'sort') {
      data.orderBy = input.orderBy;
      data.sort = input.sort;
    }
    else if(input.action == 'item_per_page') {
      data.limit = input.itemsPerPage;
    }
    
  }
  
  var invoiceAggr = new GlideAggregate('x_nriws_coupa_req_coupa_invoice'); 

  invoiceAggr.addQuery('representation_contract_number', 'IN', data.contract_number.join(','));
  invoiceAggr.addAggregate('COUNT'); 
  invoiceAggr.query(); 
  if (invoiceAggr.next()){ 
    data.totalRecord = invoiceAggr.getAggregate('COUNT');
  }
  data.totalPage = Math.ceil(data.totalRecord / data.limit);
  if (data.page < 10) {
    for(var i = 1; i <= data.totalPage ; i++) {
      data.pageItems.push(i);
    }
  }

 

  var invoiceGr = new GlideRecord('x_nriws_coupa_req_coupa_invoice');
  if(data.orderBy) {
    if(data.sort == 'ASC') {
      invoiceGr.orderBy(data.orderBy);
    }
    else {
      invoiceGr.orderByDesc(data.orderBy);
    }
  }
  if(data.invoiceStatus) {
    invoiceGr.addQuery('status',data.invoiceStatus);
  }
  invoiceGr.chooseWindow((data.page - 1)* data.limit, data.page * data.limit);
  invoiceGr.addQuery('representation_contract_number', 'IN', data.contract_number.join(','));
  invoiceGr.query();
  data.invoices = [];
  while(invoiceGr.next()) {
    data.invoices.push({
      sys_id : invoiceGr.getValue('sys_id'),
      id: invoiceGr.getValue('id'),
      currency: invoiceGr.getValue('currency'),
      status: invoiceGr.getValue('status'),
      invoice_no: invoiceGr.getValue('invoice_no'),
      po_line: invoiceGr.getValue('po_line'),
      start_date: invoiceGr.getValue('start_date'),
      end_date: invoiceGr.getValue('end_date'),
      tax_amount: invoiceGr.getValue('tax_amount'),
      amount_include_tax: invoiceGr.getValue('amount_include_tax'),
      amount_exclude_tax: invoiceGr.getValue('amount_exclude_tax'),
      business_number: invoiceGr.getValue('invoice_business_number'),
      invoice_date: invoiceGr.getValue('invoice_date'),
      payment_due_date: invoiceGr.getValue('payment_due_date'),
    })
  }
 
  /**
   * Start count number invoice by status
   */

  data.numberPendingApproval = getNumberPendingApproval();
  data.numberApproved = getNumberApproved();
  data.numberRejected = getNumberRejected();

  /**
   * End count number invoice by status
   */

  
  function getNumberPendingApproval() {
    var Agg = new GlideAggregate('x_nriws_coupa_req_coupa_invoice');
    Agg.addQuery('status', '=','pending_approval');
    Agg.addQuery('representation_contract_number', 'IN', data.contract_number.join(','));
    Agg.addAggregate('COUNT');
    Agg.query();
    var count = 0;
    if (Agg.next()) {
      count = Agg.getAggregate('COUNT');
    }
    return count;
  }

  function getNumberApproved() {
    var Agg = new GlideAggregate('x_nriws_coupa_req_coupa_invoice');
    Agg.addQuery('status', '=','approved');
    Agg.addQuery('representation_contract_number', 'IN', data.contract_number.join(','));
    Agg.addAggregate('COUNT');
    Agg.query();
    var count = 0;
    if (Agg.next()) {
      count = Agg.getAggregate('COUNT');
    }
    return count;
  }

  function getNumberRejected() {
    var Agg = new GlideAggregate('x_nriws_coupa_req_coupa_invoice');
    Agg.addQuery('status', '=','rejected');
    Agg.addQuery('representation_contract_number', 'IN', data.contract_number.join(','));
    Agg.addAggregate('COUNT');
    Agg.query();
    var count = 0;
    if (Agg.next()) {
      count = Agg.getAggregate('COUNT');
    }
    return count;
  }


})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>NRIWPS_mizoshiri</sys_created_by>
        <sys_created_on>2021-05-04 09:13:07</sys_created_on>
        <sys_id>d2d1f39f1b3b6850057498ea234bcb57</sys_id>
        <sys_mod_count>334</sys_mod_count>
        <sys_name>Coupa invoice list</sys_name>
        <sys_package display_value="Coupa Requisition" source="x_nriws_coupa_req">0d3e1ae31b48201059943265cc4bcb59</sys_package>
        <sys_policy/>
        <sys_scope display_value="Coupa Requisition">0d3e1ae31b48201059943265cc4bcb59</sys_scope>
        <sys_update_name>sp_widget_d2d1f39f1b3b6850057498ea234bcb57</sys_update_name>
        <sys_updated_by>NRIWPS_mizoshiri</sys_updated_by>
        <sys_updated_on>2021-06-21 02:02:24</sys_updated_on>
        <template><![CDATA[<h2>
  Coupa invoice list
  <p class="pull-right">
     <button class="btn btn-danger" ng-click="c.goHome()"><i class="fa fa-home" style="font-size:18px;">&nbsp;</i>
     <b>${管理者ページへ戻る}</b>
     </button>
  </p>
</h2>
<hr class="break-line" />
<div class="approval-list-layout">
  <div class="SumCount-layout">
    <ul>
      <li class="li-class text-warning" ng-click="c.redirect('pending_approval')">
        <div ng-class="{'active-layout': c.data.status=='requested','layout': c.data.status!='requested'} ">
          <div  class="left-side">
            <b>{{c.data.numberPendingApproval}}</b>
            <p>承認待ち</p>
          </div>
          <div class="right-side">
            <i class="fa fa-clock-o" aria-hidden="true"></i>
          </div>
        </div>
      </li>
      <li class="li-class text-success" ng-click="c.redirect('approved')">
        <div ng-class="{'active-layout': c.data.status=='approved','layout': c.data.status!='approved'} ">
          <div class="left-side">
            <b>{{c.data.numberApproved}}</b>
            <p>承認済み</p>
          </div>
          <div class="right-side">
            <i class="fa fa-check-circle" aria-hidden="true"></i>
          </div>
        </div>
      </li>
      <li class="li-class text-danger" ng-click="c.redirect('rejected')">
        <div ng-class="{'active-layout': c.data.status=='rejected','layout': c.data.status!='rejected'} ">
          <div class="left-side">
            <b>{{c.data.numberRejected}}</b>
            <p>否認済み</p>
          </div>
          <div class="right-side">
            <i class="fa fa-times-circle" aria-hidden="true"></i>
          </div>
        </div>
      </li>
      <li class="li-class text-muted" ng-click="c.redirect('not_required')">
        <div ng-class="{'active-layout': c.data.status=='not_required','layout': c.data.status!='not_required'} ">
          <div class="left-side">
            <b>{{c.data.not_required_count}}</b>
            <p>承認不要</p>
          </div>
          <div class="right-side">
            <i class="fa fa-times" aria-hidden="true"></i>
          </div>
        </div>
      </li>
      <li class="li-class text-primary" ng-click="c.redirect('all')">
        <div  ng-class="{'active-layout': c.data.status=='all' || c.data.status== null ,'layout': c.data.status!='all' && data.status!=null } ">
          <div class="left-side">
            <b>{{c.data.totalRecord}}</b>
            <p>全て</p>
          </div>
          <div class="right-side">
            <i class="fa fa-list" aria-hidden="true"></i>
          </div>
        </div>
      </li>
    </ul>
  </div>  
</div>

<div class="coupa-invoice-page">
  <nav class="nav-pagination" aria-label="Page navigation">
    <ul class="pagination justify-content-center">
      <li ng-click = "c.prevPage()" class="page-item {{c.data.page == 1 ? 'disabled' : ''}}">
        <a class="page-link" href="javascript:void(0)" tabindex="-1">‹</a>
      </li>
      <li ng-click = "c.goToPage(item)" ng-if = "data.totalPage <10" ng-repeat = "item in c.data.pageItems" class="page-item {{c.data.page == item ? 'active' : ''}}">
        <a class="page-link" href="javascript:void(0)">{{ item }}</a>
      </li>
      <li ng-if = "data.totalPage >= 10" style = "display: flex;">
        <input  style="width: 40px;text-align: center;height: 32px; border:solid 1px #ccc; margin: 3px;" ng-change = "c.goToPage(c.current_page)" min="1" type="number" ng-model = "c.current_page" />
        <span style="border: none;color: #aaa; display: flex; align-items: center;"> of {{ data.totalPage }}</span>
      </li>
      <li ng-click = "c.nextPage()" class="page-item {{ c.data.page == c.data.totalPage ? 'disabled' : '' }}">
        <a class="page-link" href="javascript:void(0)">›</a>
      </li>
    </ul>
    <div class = "" style = "width: 175px;" >
      <label>${ページ内件数:}</label>
      <select ng-change="c.itemsPerPageHandler()" ng-model="c.itemsPerPage" ng-options="x for x in c.itemsPerPageOptions">
      </select>
   </div>
  </nav>

  <table id="invoice-table" class=" table table-hover table-sm">
    <thead >
      <tr>
        <th ng-click = "c.sort('id')" class="th-sm"  scope="col">
          ID
          <i ng-if = "c.data.orderBy == 'id' " class="fa fa-angle-double-{{c.data.sort == 'ASC' ? 'up' : 'down'}}"></i>
        </th>
        <th ng-click = "c.sort('currency')" class="th-sm" scope="col">
          Currency
          <i ng-if = "c.data.orderBy == 'currency' " class="fa fa-angle-double-{{c.data.sort == 'ASC' ? 'up' : 'down'}}"></i>
        </th>
        <th ng-click = "c.sort('status')" class="th-sm" scope="col">
          Status
          <i ng-if = "c.data.orderBy == 'status' " class="fa fa-angle-double-{{c.data.sort == 'ASC' ? 'up' : 'down'}}"></i>
        </th>
        <th ng-click = "c.sort('start_date')" class="th-sm" scope="col">
          Start Date
          <i ng-if = "c.data.orderBy == 'start_date' " class="fa fa-angle-double-{{c.data.sort == 'ASC' ? 'up' : 'down'}}"></i>
        </th>
        <th ng-click = "c.sort('end_date')" class="th-sm" scope="col">
          End Date
          <i ng-if = "c.data.orderBy == 'end_date' " class="fa fa-angle-double-{{c.data.sort == 'ASC' ? 'up' : 'down'}}"></i>
        </th>
        <th ng-click = "c.sort('invoice_no')" class="th-sm" scope="col">
          Invoice NO
          <i ng-if = "c.data.orderBy == 'invoice_no' " class="fa fa-angle-double-{{c.data.sort == 'ASC' ? 'up' : 'down'}}"></i>
        </th>
        <th ng-click = "c.sort('po_line')" class="th-sm" scope="col">
          PO line
          <i ng-if = "c.data.orderBy == 'po_line' " class="fa fa-angle-double-{{c.data.sort == 'ASC' ? 'up' : 'down'}}"></i>
        </th>
        <th ng-click = "c.sort('amount_exclude_tax')" class="th-sm" scope="col">
          Amount (Exclude tax)
          <i ng-if = "c.data.orderBy == 'amount_exclude_tax' " class="fa fa-angle-double-{{c.data.sort == 'ASC' ? 'up' : 'down'}}"></i>
        </th>
        <th ng-click = "c.sort('amount_include_tax')" class="th-sm" scope="col">
          Amount (Include tax)
          <i ng-if = "c.data.orderBy == 'amount_include_tax' " class="fa fa-angle-double-{{c.data.sort == 'ASC' ? 'up' : 'down'}}"></i>
        </th>
        <th ng-click = "c.sort('tax_amount')" class="th-sm" scope="col">
          Tax Amount
          <i ng-if = "c.data.orderBy == 'tax_amount' " class="fa fa-angle-double-{{c.data.sort == 'ASC' ? 'up' : 'down'}}"></i>
        </th>
      </tr>
    </thead>
    <tbody>
      <tr class="invoice-item" ng-repeat = "item in c.data.invoices">      
        <td style="font-weight: bold;"><a href="nrid_approval_portal?id=coupa_invoice_detail&sys_id={{item.sys_id}}">{{ item.id }}</a></td>
        <td>{{ item.currency }}</td>
        <td>{{ item.status }}</td>
        <td>{{ item.start_date}}</td>
        <td>{{ item.end_date}}</td>
        <td>{{ item.invoice_no}}</td>
        <td>{{ item.po_line}}</td>
        <td>{{ item.amount_exclude_tax}}</td>
        <td>{{ item.amount_include_tax}}</td>
        <td>{{ item.tax_amount}}</td>
      </tr>
    </tbody>
  </table>

</div>
]]></template>
    </sp_widget>
</record_update>
